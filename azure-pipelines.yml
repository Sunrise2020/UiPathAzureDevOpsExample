trigger:
  - master
variables:
  - group: DEV
pool: $(AGENTS)

stages:
  - stage: Build
    displayName: Build UIPath Packages
    jobs: 
    - job: BuildTestPackage
      steps:
      - task: PowerShell@2
        displayName: Deleting old packages
        inputs:
          targetType: 'inline'
          script: |
            write-Host "Deleting the content in: $(Agent.BuildDirectory)\tests"
            Remove-Item –path $(Agent.BuildDirectory)\tests –recurse
          errorActionPreference: 'continue'
      - task: UiPathPack@2
        displayName: Creating UIPath Packages
        inputs:
          versionType: 'AutoVersion'
          projectJsonPath: '$(Build.SourcesDirectory)\project.json'
          outputType: 'Tests'
          orchestratorConnection: 'UIPath Orchestrator'
          outputPath: '$(Build.ArtifactStagingDirectory)'
      - publish: $(Build.ArtifactStagingDirectory)
        displayName: Publish Created Packages
        artifact: tests

  - stage: Assest
    displayName: Create Assests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: CreateAssests
        steps:
        - task: UiPathAssets@2
          inputs:
            orchestratorConnection: 'UIPath Orchestrator'
            folderName: 'Shared'
            assetActionType: 'Deploy'
            csvFile: '$(Build.SourcesDirectory)\Data\Assests.csv'

  - stage: Deploy
    displayName: Deploy build artifacts
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: deployDEV
        displayName: Deploy package to Orchestrator
        environment: DEV
        strategy:
         runOnce:
          deploy:
           steps:
            - task: UiPathDeploy@2
              inputs:
                orchestratorConnection: 'UIPath Orchestrator'
                packagesPath: '$(Pipeline.Workspace)\tests\'
                folderName: 'Shared/TestCases'
                entryPoints: TestCase.xaml

  - stage: TestExec
    displayName:  Test Case Execution
    dependsOn: Deploy
    condition: succeeded()
    jobs:
      - job: TestExec
        steps:
          - task: UiPathTest@2
            inputs:
              testTarget: 'TestProject'
              orchestratorConnection: 'UIPath Orchestrator'
              folderName: 'Shared/TestCases'
              testReportDestination: '$(Pipeline.Workspace)\tests\'
              traceLevel: 'Information'
              timeout: 180
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*.xml'
              searchFolder: '$(Pipeline.Workspace)\tests\'
              testRunTitle: 'UIPath Testrun'
